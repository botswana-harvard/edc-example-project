# -*- coding: utf-8 -*-
# Generated by Django 1.10.3 on 2016-11-24 18:58
from __future__ import unicode_literals

from django.db import migrations, models
import django.utils.timezone
import django_extensions.db.fields
import django_revision.revision_field
import edc_base.model_fields.hostname_modification_field
import edc_base.model_fields.userfield
import edc_base.model_fields.uuid_auto_field
import edc_base.model_validators.date
import edc_protocol.validators
import edc_visit_schedule.model_mixins


class Migration(migrations.Migration):

    dependencies = [
        ('edc_example_project', '0002_auto_20161124_1858'),
    ]

    operations = [
        migrations.CreateModel(
            name='Disenrollment',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(
                    auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(
                    auto_now=True, verbose_name='modified')),
                ('user_created', edc_base.model.fields.userfield.UserField(
                    blank=True, editable=False, max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model.fields.userfield.UserField(
                    blank=True, editable=False, max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(default='mac2-2.local', editable=False,
                                                      help_text='System field. (modified on create only)', max_length=50)),
                ('hostname_modified', edc_base.model.fields.hostname_modification_field.HostnameModificationField(
                    blank=True, editable=False, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False,
                                                                          help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('id', edc_base.model.fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False,
                                                                           help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('visit_schedule_name', models.CharField(
                    editable=False, help_text='the name of the visit schedule used to find the "schedule"', max_length=25)),
                ('schedule_name', models.CharField(
                    editable=False, max_length=25)),
                ('subject_identifier', models.CharField(default=edc_visit_schedule.model_mixins.get_uuid,
                                                        editable=False, max_length=50, verbose_name='Subject Identifier')),
                ('report_datetime', models.DateTimeField(default=django.utils.timezone.now, validators=[
                 edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future])),
                ('disenrollment_datetime', models.DateTimeField(default=django.utils.timezone.now, validators=[
                 edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future])),
                ('consent_version', models.CharField(
                    default='?', editable=False, max_length=10)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DisenrollmentThree',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(
                    auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(
                    auto_now=True, verbose_name='modified')),
                ('user_created', edc_base.model.fields.userfield.UserField(
                    blank=True, editable=False, max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model.fields.userfield.UserField(
                    blank=True, editable=False, max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(default='mac2-2.local', editable=False,
                                                      help_text='System field. (modified on create only)', max_length=50)),
                ('hostname_modified', edc_base.model.fields.hostname_modification_field.HostnameModificationField(
                    blank=True, editable=False, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False,
                                                                          help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('id', edc_base.model.fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False,
                                                                           help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('visit_schedule_name', models.CharField(
                    editable=False, help_text='the name of the visit schedule used to find the "schedule"', max_length=25)),
                ('schedule_name', models.CharField(
                    editable=False, max_length=25)),
                ('subject_identifier', models.CharField(default=edc_visit_schedule.model_mixins.get_uuid,
                                                        editable=False, max_length=50, verbose_name='Subject Identifier')),
                ('report_datetime', models.DateTimeField(default=django.utils.timezone.now, validators=[
                 edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future])),
                ('disenrollment_datetime', models.DateTimeField(default=django.utils.timezone.now, validators=[
                 edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future])),
                ('consent_version', models.CharField(
                    default='?', editable=False, max_length=10)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DisenrollmentTwo',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(
                    auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(
                    auto_now=True, verbose_name='modified')),
                ('user_created', edc_base.model.fields.userfield.UserField(
                    blank=True, editable=False, max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model.fields.userfield.UserField(
                    blank=True, editable=False, max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(default='mac2-2.local', editable=False,
                                                      help_text='System field. (modified on create only)', max_length=50)),
                ('hostname_modified', edc_base.model.fields.hostname_modification_field.HostnameModificationField(
                    blank=True, editable=False, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False,
                                                                          help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('id', edc_base.model.fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False,
                                                                           help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('visit_schedule_name', models.CharField(
                    editable=False, help_text='the name of the visit schedule used to find the "schedule"', max_length=25)),
                ('schedule_name', models.CharField(
                    editable=False, max_length=25)),
                ('subject_identifier', models.CharField(default=edc_visit_schedule.model_mixins.get_uuid,
                                                        editable=False, max_length=50, verbose_name='Subject Identifier')),
                ('report_datetime', models.DateTimeField(default=django.utils.timezone.now, validators=[
                 edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future])),
                ('disenrollment_datetime', models.DateTimeField(default=django.utils.timezone.now, validators=[
                 edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future])),
                ('consent_version', models.CharField(
                    default='?', editable=False, max_length=10)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(
                    auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(
                    auto_now=True, verbose_name='modified')),
                ('user_created', edc_base.model.fields.userfield.UserField(
                    blank=True, editable=False, max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model.fields.userfield.UserField(
                    blank=True, editable=False, max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(default='mac2-2.local', editable=False,
                                                      help_text='System field. (modified on create only)', max_length=50)),
                ('hostname_modified', edc_base.model.fields.hostname_modification_field.HostnameModificationField(
                    blank=True, editable=False, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False,
                                                                          help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('id', edc_base.model.fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False,
                                                                           help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('visit_schedule_name', models.CharField(
                    editable=False, help_text='the name of the visit schedule used to find the "schedule"', max_length=25)),
                ('schedule_name', models.CharField(
                    editable=False, max_length=25)),
                ('subject_identifier', models.CharField(default=edc_visit_schedule.model_mixins.get_uuid,
                                                        editable=False, max_length=50, verbose_name='Subject Identifier')),
                ('report_datetime', models.DateTimeField(default=django.utils.timezone.now, validators=[
                 edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future])),
                ('is_eligible', models.BooleanField(
                    default=False, editable=False)),
                ('facility_name', models.CharField(default='clinic', help_text='The facility name is need when scheduling appointments',
                                                   max_length=25, verbose_name='To which facility is this subject being enrolled?')),
                ('consent_version', models.CharField(
                    default='?', editable=False, max_length=10)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EnrollmentThree',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(
                    auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(
                    auto_now=True, verbose_name='modified')),
                ('user_created', edc_base.model.fields.userfield.UserField(
                    blank=True, editable=False, max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model.fields.userfield.UserField(
                    blank=True, editable=False, max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(default='mac2-2.local', editable=False,
                                                      help_text='System field. (modified on create only)', max_length=50)),
                ('hostname_modified', edc_base.model.fields.hostname_modification_field.HostnameModificationField(
                    blank=True, editable=False, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False,
                                                                          help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('id', edc_base.model.fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False,
                                                                           help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('visit_schedule_name', models.CharField(
                    editable=False, help_text='the name of the visit schedule used to find the "schedule"', max_length=25)),
                ('schedule_name', models.CharField(
                    editable=False, max_length=25)),
                ('subject_identifier', models.CharField(default=edc_visit_schedule.model_mixins.get_uuid,
                                                        editable=False, max_length=50, verbose_name='Subject Identifier')),
                ('report_datetime', models.DateTimeField(default=django.utils.timezone.now, validators=[
                 edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future])),
                ('is_eligible', models.BooleanField(
                    default=False, editable=False)),
                ('facility_name', models.CharField(default='clinic', help_text='The facility name is need when scheduling appointments',
                                                   max_length=25, verbose_name='To which facility is this subject being enrolled?')),
                ('consent_version', models.CharField(
                    default='?', editable=False, max_length=10)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EnrollmentTwo',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(
                    auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(
                    auto_now=True, verbose_name='modified')),
                ('user_created', edc_base.model.fields.userfield.UserField(
                    blank=True, editable=False, max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model.fields.userfield.UserField(
                    blank=True, editable=False, max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(default='mac2-2.local', editable=False,
                                                      help_text='System field. (modified on create only)', max_length=50)),
                ('hostname_modified', edc_base.model.fields.hostname_modification_field.HostnameModificationField(
                    blank=True, editable=False, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False,
                                                                          help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('id', edc_base.model.fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False,
                                                                           help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('visit_schedule_name', models.CharField(
                    editable=False, help_text='the name of the visit schedule used to find the "schedule"', max_length=25)),
                ('schedule_name', models.CharField(
                    editable=False, max_length=25)),
                ('subject_identifier', models.CharField(default=edc_visit_schedule.model_mixins.get_uuid,
                                                        editable=False, max_length=50, verbose_name='Subject Identifier')),
                ('report_datetime', models.DateTimeField(default=django.utils.timezone.now, validators=[
                 edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future])),
                ('is_eligible', models.BooleanField(
                    default=False, editable=False)),
                ('facility_name', models.CharField(default='clinic', help_text='The facility name is need when scheduling appointments',
                                                   max_length=25, verbose_name='To which facility is this subject being enrolled?')),
                ('consent_version', models.CharField(
                    default='?', editable=False, max_length=10)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AlterUniqueTogether(
            name='enrollmenttwo',
            unique_together=set(
                [('subject_identifier', 'visit_schedule_name', 'schedule_name')]),
        ),
        migrations.AlterUniqueTogether(
            name='enrollmentthree',
            unique_together=set(
                [('subject_identifier', 'visit_schedule_name', 'schedule_name')]),
        ),
        migrations.AlterUniqueTogether(
            name='enrollment',
            unique_together=set(
                [('subject_identifier', 'visit_schedule_name', 'schedule_name')]),
        ),
        migrations.AlterUniqueTogether(
            name='disenrollmenttwo',
            unique_together=set(
                [('subject_identifier', 'visit_schedule_name', 'schedule_name')]),
        ),
        migrations.AlterUniqueTogether(
            name='disenrollmentthree',
            unique_together=set(
                [('subject_identifier', 'visit_schedule_name', 'schedule_name')]),
        ),
        migrations.AlterUniqueTogether(
            name='disenrollment',
            unique_together=set(
                [('subject_identifier', 'visit_schedule_name', 'schedule_name')]),
        ),
    ]
